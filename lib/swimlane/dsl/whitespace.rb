# Autogenerated from a Treetop grammar. Edits may be lost.


require 'treetop'

module DSL
  module Whitespace
    include Treetop::Runtime

    def root
      @root ||= :whitespace
    end

    def _nt_whitespace
      start_index = index
      if node_cache[:whitespace].has_key?(index)
        cached = node_cache[:whitespace][index]
        if cached
          cached = SyntaxNode.new(input, index...(index + 1)) if cached == true
          @index = cached.interval.end
        end
        return cached
      end

      if has_terminal?(" ", false, index)
        r0 = instantiate_node(SyntaxNode,input, index...(index + 1))
        @index += 1
      else
        terminal_parse_failure(" ")
        r0 = nil
      end

      node_cache[:whitespace][start_index] = r0

      r0
    end

  end

  class WhitespaceParser < Treetop::Runtime::CompiledParser
    include Whitespace
  end

end